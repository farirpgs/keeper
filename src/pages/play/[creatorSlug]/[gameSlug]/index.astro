---
import { Heading } from "@radix-ui/themes";
import type {
  GetStaticPathsItem,
  InferGetStaticParamsType,
  InferGetStaticPropsType,
} from "astro";
import Banner from "../../../../components/Banner.astro";
import { MDX, getMdxComponents } from "../../../../components/MDX";
import { DL } from "../../../../domains/DL";
import Layout from "../../../../layouts/Layout.astro";
import { PlayPage } from "./_index";

type Params = InferGetStaticParamsType<typeof getStaticPaths>;
type Props = InferGetStaticPropsType<typeof getStaticPaths>;

const props = Astro.props as Props;
const params = Astro.params as Params;

const sheets = await Promise.all(
  props.sheets.map(async (sheet) => {
    const { Content } = await sheet.render();
    return {
      sheet,
      Content,
    };
  })
);

export async function getStaticPaths() {
  const gamesWithCreatorsAndSheets =
    await DL.getAllGamesWithCreatorsAndSheets();
  return gamesWithCreatorsAndSheets.map((item) => {
    return {
      params: {
        creatorSlug: item.creator.slug,
        gameSlug: item.game.slug.split("/").pop(),
      },
      props: {
        game: item.game,
        creator: item.creator,
        sheets: item.sheets,
      },
    } satisfies GetStaticPathsItem;
  });
}
---

<Layout
  title=""
  headingFont={props.game.data.headingFont}
  bodyFont={props.game.data.bodyFont}
>
  <Banner
    src={props.game.data.image}
    alt={props.game.data.name}
    justBackground
  />
  <PlayPage client:load game={props.game} creator={props.creator} />

  {
    sheets.map((sheet) => {
      return (
        <div>
          <MDX>
            <Heading size="6">{sheet.sheet.data.name}</Heading>
            <sheet.Content
              components={{
                ...getMdxComponents(),
              }}
            />
          </MDX>
        </div>
      );
    })
  }
</Layout>
