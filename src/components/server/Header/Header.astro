---
import {
  MagnifyingGlassIcon,
  MoonIcon,
  SunIcon,
  ReaderIcon,
} from "@radix-ui/react-icons";
import {
  Box,
  Button,
  Flex,
  Grid,
  Link,
  VisuallyHidden,
} from "@radix-ui/themes";
import { SquareLibrary, Book } from "lucide-react";
import { AppUrl } from "../../../domains/app-url/AppUrl";
import { DiceRollerButton } from "../../client/DiceRoller/DiceRoller";
import { getSurfaceStyle } from "../../client/Surface/getSurfaceStyle";
import Patreon from "./Patreon.astro";
import { StoriedNameLogo } from "./Storied";
import type { ThemeType } from "../../../domains/utils/getTheme";

export type Props = {
  theme?: ThemeType;
};

const fontFamily =
  "-apple-system, BlinkMacSystemFont, 'Segoe UI (Custom)', Roboto, 'Helvetica Neue', 'Open Sans (Custom)', system-ui, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji'";
---

<Grid
  justify={"between"}
  align={"center"}
  columns="3"
  className="my-9 items-center rounded-[--radius-2] border-b border-l border-r border-t border-[--accent-4] px-6 py-5 initial:my-6 initial:mb-[3rem] print:hidden"
  style={{
    ...getSurfaceStyle(),
  }}
>
  <Flex justify={"start"}>
    <Link href={AppUrl.home()} highContrast>
      <StoriedNameLogo className="h-[1.25rem] fill-[currentColor]" />
    </Link>
  </Flex>
  <Flex gap="4" justify="center">
    <a href={AppUrl.campaigns()}>
      <Button radius="full" size="3" variant="ghost" className="m-0">
        <SquareLibrary />

        <span
          class="hidden lg:inline-block"
          style={{
            fontFamily,
          }}>My Campaigns</span
        >
        <VisuallyHidden> My Campaigns </VisuallyHidden>
      </Button>
    </a>
  </Flex>
  <Flex justify={"end"} gap="2" align={"center"}>
    <Box className="hidden sm:inline-block">
      <DiceRollerButton client:load theme={Astro.props.theme} />
    </Box>
    <a href={AppUrl.docs()}>
      <Button
        radius="full"
        size="3"
        variant="ghost"
        className="m-0 hidden md:inline-block"
        style={{
          fontFamily,
        }}
      >
        <ReaderIcon className="h-[24px] w-[24px]" />
      </Button>
    </a>

    <a href={AppUrl.search({})} aria-label="Search">
      <Button radius="full" size="3" variant="ghost" className="m-0">
        <MagnifyingGlassIcon className="h-[24px] w-[24px]" />
      </Button>
    </a>
    <a href={AppUrl.patreon()} target="_blank">
      <Button radius="full" size="3" variant="ghost" className="m-0">
        <Patreon />
        <span
          class="hidden lg:inline-block"
          style={{
            fontFamily,
          }}>Subscribe</span
        >
      </Button>
    </a>
    <Button
      radius="full"
      size="3"
      id="themeToggle"
      variant="ghost"
      className="m-0"
    >
      <SunIcon className="sun h-[24px] w-[24px]" />
      <MoonIcon className="moon h-[24px] w-[24px]" />
    </Button>
  </Flex>
</Grid>
<style is:global>
  .sun {
    display: block;
  }
  .moon {
    display: none;
  }
  .dark .sun {
    display: none;
  }
  .dark .moon {
    display: block;
  }
</style>

<script data-astro-rerun is:inline>
  (() => {
    // get theme
    let theme = undefined;
    if (typeof localStorage !== "undefined" && localStorage.getItem("theme")) {
      theme = localStorage.getItem("theme");
    } else {
      if (window.matchMedia("(prefers-color-scheme: dark)").matches) {
        theme = "dark";
      } else {
        theme = "light";
      }
    }
    // update html + localStorage
    if (theme === "light") {
      document.documentElement.classList.add("light");
      document.documentElement.classList.remove("dark");
    } else {
      document.documentElement.classList.add("dark");
      document.documentElement.classList.remove("light");
    }

    window.localStorage.setItem("theme", theme);
  })();

  function handleToggleClick() {
    const element = document.documentElement;
    element.classList.toggle("dark");
    element.classList.toggle("light");

    const isDark = element.classList.contains("dark");

    localStorage.setItem("theme", isDark ? "dark" : "light");
  }

  document
    .getElementById("themeToggle")
    .addEventListener("click", handleToggleClick);

  document.addEventListener("astro:after-swap", function () {
    if (localStorage.getItem("theme") === "dark") {
      document.documentElement.classList.toggle("dark", true);
      document.documentElement.classList.toggle("light", true);
    }
  });
</script>
